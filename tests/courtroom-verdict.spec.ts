// tests/courtroom-verdict.spec.ts
import { test, expect } from '@playwright/test';

test.describe('Court Room - Verdict Delivery', () => {
  
  test('should generate case, select evidence, and deliver verdict', async ({ page }) => {
    // Navigate to Court Room page
    await page.goto('/court-room');
    
    // Wait for page to load
    await expect(page.locator('h1')).toContainText('Court Room');
    
    // Check that a case is generated by default
    await expect(page.locator('h2')).toBeVisible();
    const caseTitle = await page.locator('h2').textContent();
    console.log('Generated Case:', caseTitle);
    
    // Select first evidence checkbox
    const firstEvidence = page.locator('input[type="checkbox"]').first();
    await firstEvidence.check();
    await expect(firstEvidence).toBeChecked();
    console.log('✓ Evidence selected');
    
    // Select a witness (first radio button)
    const firstWitness = page.locator('input[type="radio"][name="witness"]').first();
    await firstWitness.check();
    await expect(firstWitness).toBeChecked();
    console.log('✓ Witness selected');
    
    // Adjust jury votes (move slider)
    const jurySlider = page.locator('input[type="range"]');
    await jurySlider.fill('8'); // 8 votes guilty
    console.log('✓ Jury votes set to 8/12');
    
    // Check strength score is visible
    const strengthScore = await page.locator('text=Strength score:').textContent();
    console.log(strengthScore);
    
    // Click "Deliver Verdict" button
    await page.click('button:has-text("Deliver Verdict")');
    
    // Wait for verdict modal to appear (check for the heading specifically)
    await expect(page.locator('h3#verdict-title')).toBeVisible({ timeout: 5000 });
    console.log('✓ Verdict modal opened');
    
    // Check verdict result (GUILTY or NOT GUILTY)
    const verdictResult = await page.locator('text=/GUILTY|NOT GUILTY/').first().textContent();
    console.log('Verdict Result:', verdictResult);
    expect(verdictResult).toMatch(/GUILTY|NOT GUILTY/);
    
    // Close modal
    await page.click('button:has-text("Close")');
    console.log('✓ Test completed successfully');
  });

  test('should generate 3 different cases and verify each', async ({ page }) => {
    await page.goto('/court-room');
    
    for (let i = 1; i <= 3; i++) {
      console.log(`\n--- Testing Case ${i} ---`);
      
      // Get case details
      const caseTitle = await page.locator('h2').textContent();
      const caseType = await page.locator('text=/Traffic|Contract|Theft/').first().textContent();
      console.log(`Case ${i}: ${caseTitle} (${caseType})`);
      
      // Select evidence
      await page.locator('input[type="checkbox"]').first().check();
      
      // Set jury votes
      await page.locator('input[type="range"]').fill('6');
      
      // Deliver verdict
      await page.click('button:has-text("Deliver Verdict")');
      
      // Verify verdict modal appears (use specific selector)
      await expect(page.locator('h3#verdict-title')).toBeVisible();
      const verdict = await page.locator('text=/GUILTY|NOT GUILTY/').first().textContent();
      console.log(`Verdict ${i}: ${verdict}`);
      
      // Close modal
      await page.click('button:has-text("Close")');
      
      // Generate new case for next iteration (if not last)
      if (i < 3) {
        await page.click('button:has-text("New Case")');
        await page.waitForTimeout(500); // Wait for new case to generate
      }
    }
    
    console.log('\n✓ All 3 cases tested successfully');
  });
  
});